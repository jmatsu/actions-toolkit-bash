name: 'test action itself'
on:
  pull_request:
    types: ['opened', 'synchronize', 'ready_for_review']
    paths:
    - '.github/workflows/test-action.yml'
    - 'src/*.ts'
    - '__tests__/*.ts'
    - 'dist/*'
    - 'package*.json'
    - '.github/bin/verify_executable_commands.bash'

jobs:
  action:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: ./.github/bin/package.bash
      - uses: ./
        with:
          version: 0.0.1
      - run: .github/bin/verify_executable_commands.bash

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run format-check
      - run: npm run lint
        if: always()
      - run: npm run test
        if: always()
